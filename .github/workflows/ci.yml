name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
    tags: ["v*"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache
      uses: coursier/cache-action@v6

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
          distribution: adopt
          java-version: 11

    - name: Setup Mill
      uses: jodersky/setup-mill@master
      with:
        mill-version: 0.10.5

    - name: Run tests
      run: |
        mill -k --disable-ticker __.resolvedIvyDeps &&
        mill -j 0 -k --disable-ticker __.checkFormat &&
        mill -j 0 -k --disable-ticker __.test

    - name: Set up GPG
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        mkdir ~/.gnupg && chmod 700 ~/.gnupg
        echo use-agent >> ~/.gnupg/gpg.conf
        echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
        echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
        chmod 600 ~/.gnupg/*
        echo RELOADAGENT | gpg-connect-agent
        echo $PGP_SECRET | base64 --decode | gpg --import --no-tty --batch --yes
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}

    - name: Publish release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        export GPG_TTY=$(tty)
        mill -j 0 -k --disable-ticker mill.scalalib.PublishModule/publishAll \
          --publishArtifacts __.publishArtifacts \
          --sonatypeCreds ${{ secrets.SONATYPE_USERNAME }}:${{secrets.SONATYPE_PASSWORD }} \
          --gpgArgs '--passphrase=${{ secrets.PGP_PASSPHRASE }},--batch,--yes,-a,-b' \
          --sonatypeUri https://s01.oss.sonatype.org/service/local \
          --sonatypeSnapshotUri https://s01.oss.sonatype.org/content/repositories/snapshots \
          --signed true \
          --release true
